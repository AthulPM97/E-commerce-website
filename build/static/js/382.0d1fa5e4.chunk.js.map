{"version":3,"file":"static/js/382.0d1fa5e4.chunk.js","mappings":"8PAwEA,EAnEiB,WACf,IAAMA,GAAUC,EAAAA,EAAAA,MACVC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAErBC,GAAgBC,EAAAA,EAAAA,UAChBC,GAAmBD,EAAAA,EAAAA,UAkCvB,OACE,SAACE,EAAA,EAAS,CAACC,OAAK,EAACC,UAAU,OAAM,UAC/B,UAACC,EAAA,EAAI,CAACC,SAlCU,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAeV,EAAcW,QAAQC,MACrCC,EAAkBX,EAAiBS,QAAQC,MAEjDE,MACE,oHACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAOT,EACPU,SAAUP,EACVQ,mBAAmB,IAErBC,QAAS,CACP,eAAgB,sBAGpBC,MAAK,SAACC,GACN,IAAIA,EAASC,GAOX,OAAOD,EAASE,OAAOH,MAAK,SAACI,GAC3BC,MAAM,GAAD,OAAID,EAAKE,MAAMC,SACtB,IARAC,aAAaC,QAAQ,QAAStB,GAC9Bf,EAAQsC,KAAK,UACbT,EAASE,OAAOH,MAAK,SAACI,GACpB9B,EAAQqC,MAAMP,EAAKQ,QACrB,GAMJ,GAAG,EAI+B,WAC5B,UAAC7B,EAAA,QAAU,CAACD,UAAU,OAAM,WAC1B,SAACC,EAAA,QAAU,UAAC,YACZ,SAACA,EAAA,UAAY,CACX8B,KAAK,QACLC,YAAY,cACZC,IAAKtC,QAGT,UAACM,EAAA,QAAU,CAACD,UAAU,OAAM,WAC1B,SAACC,EAAA,QAAU,UAAC,cACZ,SAACA,EAAA,UAAY,CACX8B,KAAK,WACLC,YAAY,iBACZC,IAAKpC,QAGT,SAACqC,EAAA,EAAM,CAAClC,UAAU,OAAOmC,QAAQ,UAAUJ,KAAK,SAAQ,SAAC,cAMjE,EC/DF,EAJiB,WACb,OAAO,SAAC,EAAQ,GACpB,C","sources":["components/Auth/AuthForm.js","Pages/AuthPage.js"],"sourcesContent":["import { Button, Container, Form } from \"react-bootstrap\";\r\nimport { useContext, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\nconst AuthForm = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBX2wLipg-BCZ8_v37G_NLTvpeaUndGluI\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (response.ok) {\r\n        localStorage.setItem(\"email\", enteredEmail);\r\n        history.push(\"/store\");\r\n        response.json().then((data) => {\r\n          authCtx.login(data.idToken);\r\n        });\r\n      } else {\r\n        return response.json().then((data) => {\r\n          alert(`${data.error.message}`);\r\n        });\r\n      }\r\n    });}\r\n\r\n    return (\r\n      <Container fluid className=\"w-25\">\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label>E-mail</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              ref={emailInputRef}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              ref={passwordInputRef}\r\n            />\r\n          </Form.Group>\r\n          <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"../components/Auth/AuthForm\";\r\n\r\nconst AuthPage = () => {\r\n    return <AuthForm />\r\n}\r\n\r\nexport default AuthPage;"],"names":["history","useHistory","authCtx","useContext","AuthContext","emailInputRef","useRef","passwordInputRef","Container","fluid","className","Form","onSubmit","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","response","ok","json","data","alert","error","message","localStorage","setItem","push","login","idToken","type","placeholder","ref","Button","variant"],"sourceRoot":""}